openapi: 3.0.0
info:
  description: ''
  version: '1.0'
  title: drt API
paths:
  /api/request:
    get:
      tags:
        - request
      parameters:
        - in: header
          name: page
          schema:
            type: integer
          required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRequest'
    post:
      tags:
        - request
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: role
          schema:
            type: string
        - in: query
          name: hash
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRequest'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
    put:
      tags:
        - request
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: role
          schema:
            type: string
        - in: query
          name: hash
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequest'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
    delete:
      tags:
        - request
      parameters:
        - in: query
          name: id
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean

  /api/announcement:
    get:
      tags:
        - announcement
      parameters:
        - in: header
          name: page
          schema:
            type: integer
          required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAnnouncements'
    post:
      tags:
        - announcement
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: role
          schema:
            type: string
        - in: query
          name: hash
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAnnoucement'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
    delete:
      tags:
        - announcement
      parameters:
        - in: query
          name: id
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
  /api/auth:
    post:
      tags:
        - auth
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: password
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_authorized:
                    type: boolean
                  Name:
                    type: string
                    example: Stephan
                  Role:
                    type: integer
                    example: 1
  /api/auth/check:
    post:
      tags:
        - auth
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: role
          schema:
            type: string
        - in: query
          name: hash
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_authorized:
                    type: boolean
  /api/user/{name}:
    get:
      tags:
        - user
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
            example: asd
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  role:
                    type: integer
  /api/user:
    post:
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUser'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
  /api/user/list:
    get:
      tags:
        - user
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsers'
components:
  schemas:
    GetRequest:
      type: object
      properties:
        count:
          type: integer
          example: 15
        announcements:
          type: array
          items:
            properties:
              id:
                type: integer
              username:
                type: integer
              topic:
                type: string
              comment:
                type: string
              approved:
                type: boolean
              date:
                type: string
                example: "2020-20-20"
    UpdateRequest:
      type: object
      properties:
        user_id:
          type: integer
        username:
          type: integer
        topic:
          type: string
        comment:
          type: string
        approved:
          type: boolean
        date:
          type: string
          example: "2020-20-20"

    AddRequest:
      type: object
      properties:
        username:
          type: integer
        topic:
          type: string
        comment:
          type: string
        approved:
          type: boolean
        date:
          type: string
          example: "2020-20-20"
    GetAnnouncements:
      type: object
      properties:
        count:
          type: integer
          example: 15
        announcements:
          type: array
          items:
            properties:
              id:
                type: integer
              username:
                type: string
              title:
                type: string
              text:
                type: string
              date:
                type: string
                example: "2020-20-20"
    AddAnnoucement:
      type: object
      properties:
        title:
          type: string
        username:
          type: string
        text:
          type: string
    AddUser:
      type: object
      properties:
        name:
          type: string
        password:
          type: string
          example: "some md5 hash"
        role:
          type: string
    GetUsers:
      type: object
      properties:
        count:
          type: integer
          example: 15
        users:
          type: array
          items:
            properties:
              id:
                type: integer
              name:
                type: string
